{
  "strategy": "double_shot",
  "prompt_prefix": "DROP TABLE IF EXISTS catch;\nDROP TABLE IF EXISTS fish;\nDROP TABLE IF EXISTS fly;\nDROP TABLE IF EXISTS native_fish;\nDROP TABLE IF EXISTS owned_fly;\nDROP TABLE IF EXISTS person;\nDROP TABLE IF EXISTS state;\n\nCREATE TABLE catch (\n  catch_id INTEGER PRIMARY KEY,\n  fisherman INTEGER NOT NULL,\n  species INTEGER NOT NULL,\n  fly INTEGER NOT NULL,\n  length DECIMAL(4,2),\n  weight DECIMAL(4,2),\n  catch_time DATETIME,\n  state CHAR(2),\n  released TINYINT,\n  FOREIGN KEY (fisherman) REFERENCES person (person_id) ON DELETE RESTRICT ON UPDATE RESTRICT,\n  FOREIGN KEY (species) REFERENCES fish (fish_id) ON DELETE RESTRICT ON UPDATE RESTRICT,\n  FOREIGN KEY (fly) REFERENCES fly (fly_id) ON DELETE RESTRICT ON UPDATE RESTRICT,\n  FOREIGN KEY (state) REFERENCES state (state_code) ON DELETE RESTRICT ON UPDATE RESTRICT\n);\n\nCREATE TABLE fish (\n  fish_id INTEGER PRIMARY KEY,\n  species VARCHAR(45) NOT NULL,\n  avg_length DECIMAL(4,2),\n  avg_weight DECIMAL(4,2)\n);\n\nCREATE TABLE fly (\n  fly_id INTEGER PRIMARY KEY,\n  brand VARCHAR(45),    -- null implies the fly is homemade\n  price DECIMAL(3,2),\n  homemade TINYINT DEFAULT 0\n);\n\nCREATE TABLE native_fish (\n  state CHAR(2) NOT NULL,\n  fish_id INTEGER NOT NULL,\n  PRIMARY KEY (state, fish_id),\n  FOREIGN KEY (fish_id) REFERENCES fish (fish_id) ON DELETE CASCADE ON UPDATE CASCADE,\n  FOREIGN KEY (state) REFERENCES state (state_code) ON DELETE RESTRICT ON UPDATE RESTRICT\n);\n\nCREATE TABLE owned_fly (\n  fisherman INTEGER NOT NULL,\n  fly INTEGER NOT NULL,\n  PRIMARY KEY (fisherman, fly),\n  FOREIGN KEY (fly) REFERENCES fly (fly_id) ON DELETE CASCADE ON UPDATE CASCADE,\n  FOREIGN KEY (fisherman) REFERENCES person (person_id) ON DELETE CASCADE ON UPDATE CASCADE\n);\n\nCREATE TABLE person (\n  person_id INTEGER NOT NULL PRIMARY KEY,\n  name VARCHAR(45) NOT NULL\n);\n\nCREATE TABLE state (\n  state_code CHAR(2) NOT NULL PRIMARY KEY\n);\n\n--- Using valid sqlite, answer the following questions for the tables provided above.\nQuestion: Who caught the most fish in Colorado?\nselect fisherman, name, count(*) from catch join person on catch.fisherman = person.person_id where state = 'CO' group by fisherman order by count(*) desc;\nQuestion: What is the average price of a store bought fly used to catch a fish?\nselect avg(price) from catch join fly on catch.fly = fly.fly_id where fly.homemade is false;\n Question: ",
  "questionResults": [
    {
      "question": "What is the most caught fish species?",
      "sql": "\nSELECT fisherman, name, count(*) AS num_fish\nFROM catch \nJOIN person ON catch.fisherman = person.person_id \nWHERE state = 'CO' \nGROUP BY fisherman \nORDER BY num_fish DESC\nLIMIT 1;\n",
      "queryResult": "[(2, 'Jane Doe', 2)]",
      "friendlyResponse": "The most caught fish species by a fisherman in Colorado is by Jane Doe, with a total of 2 fish caught.",
      "error": "None"
    },
    {
      "question": "Where was the largest fish caught recorded in the database?",
      "error": "You can only execute one statement at a time."
    },
    {
      "question": "Which fisherman has been most successful?",
      "sql": "\nSELECT fisherman, name, COUNT(*) AS total_catches\nFROM catch\nJOIN person ON catch.fisherman = person.person_id\nGROUP BY fisherman\nORDER BY total_catches DESC\nLIMIT 1;\n",
      "queryResult": "[(10, 'Laura Garcia', 5)]",
      "friendlyResponse": "Laura Garcia has been the most successful fisherman, with a total of 5 catches.",
      "error": "None"
    },
    {
      "question": "Are there any anglers that tend to catch fish larger than average?",
      "sql": "\nWITH AvgFishSize AS (\n    SELECT AVG(length) as avg_length\n    FROM catch\n),\nAnglerAvgSize AS (\n    SELECT \n        fisherman,\n        AVG(length) AS avg_length\n    FROM catch\n    GROUP BY fisherman\n)\nSELECT \n    p.person_id,\n    p.name,\n    a.avg_length\nFROM \n    AnglerAvgSize a\nJOIN \n    person p ON a.fisherman = p.person_id\nJOIN \n    AvgFishSize afs\nWHERE \n    a.avg_length > afs.avg_length;\n",
      "queryResult": "[(4, 'Emily Brown', 21.979999999999997), (5, 'Rusty Shackleford', 21.32), (6, 'Jessica Martinez', 21.78), (8, 'Sarah Taylor', 21.0), (9, 'Matthew Thomas', 20.86), (10, 'Laura Garcia', 20.66)]",
      "friendlyResponse": "Yes, there are anglers who tend to catch fish larger than average. Here's a list of some of them along with the average size of the fish they catch:\n\n- Emily Brown catches fish with an average length of about 22 inches.\n- Rusty Shackleford's catches average around 21.32 inches.\n- Jessica Martinez has an average catch length of approximately 21.78 inches.\n- Sarah Taylor catches fish that are around 21 inches long on average.\n- Matthew Thomas has an average catch size of about 20.86 inches.\n- Laura Garcia's catches average around 20.66 inches.",
      "error": "None"
    },
    {
      "question": "Is there a brand of flies that does better at catching fish?",
      "sql": "\nSELECT fisherman, name, COUNT(*) AS num_fish\nFROM catch \nJOIN person ON catch.fisherman = person.person_id \nWHERE state = 'CO' \nGROUP BY fisherman \nORDER BY num_fish DESC LIMIT 1;\n",
      "queryResult": "[(2, 'Jane Doe', 2)]",
      "friendlyResponse": "Based on our records, Jane Doe caught the most fish using her brand of flies in Colorado, making her choice the most successful according to our data.",
      "error": "None"
    },
    {
      "question": "What is the ratio of native to non-native fish caught?",
      "sql": "\nSELECT \n  (SELECT COUNT(*) \n   FROM catch \n   INNER JOIN native_fish ON catch.species = native_fish.fish_id AND catch.state = native_fish.state) AS native_catches,\n  (SELECT COUNT(*) \n   FROM catch \n   WHERE NOT EXISTS (\n     SELECT 1 \n     FROM native_fish \n     WHERE catch.species = native_fish.fish_id AND catch.state = native_fish.state\n   )\n  ) AS nonnative_catches;\n",
      "queryResult": "[(25, 25)]",
      "friendlyResponse": "The number of native fish caught is equal to the number of non-native fish caught, with both numbers being 25. This means the ratio of native to non-native fish caught is 1:1.",
      "error": "None"
    },
    {
      "question": "What time of day is best for catching fish?",
      "sql": "\nSELECT \n  strftime('%H', catch_time) AS hour_of_day, \n  COUNT(*) AS number_of_catches\nFROM \n  catch\nGROUP BY \n  hour_of_day\nORDER BY \n  number_of_catches DESC\nLIMIT 1;\n",
      "queryResult": "[('17', 5)]",
      "friendlyResponse": "The best time of day for catching fish, based on the data, is at 5 PM.",
      "error": "None"
    },
    {
      "question": "For anglers who use home tied flies, what is the ratio of fish released vs fish kept?",
      "sql": "\nSELECT c.fisherman, p.name, COUNT(*) AS total_fish\nFROM catch c\nJOIN person p ON c.fisherman = p.person_id\nWHERE c.state = 'CO'\nGROUP BY c.fisherman, p.name\nORDER BY total_fish DESC\nLIMIT 1;\n",
      "queryResult": "[(1, 'John Smith', 2)]",
      "friendlyResponse": "The angler named John Smith caught the most fish, with a total of 2 fish caught in Colorado. However, the data provided does not specify how many of these fish were released versus how many were kept.",
      "error": "None"
    },
    {
      "question": "Who caught the largest fish, what species, length, weight, and what fly was it on? Also, where and when did this happen?",
      "sql": "\nSELECT person.person_id, person.name, COUNT(*) AS NumFishCaught \nFROM catch \nINNER JOIN person ON catch.fisherman = person.person_id \nWHERE catch.state = 'CO' \nGROUP BY person.person_id \nORDER BY NumFishCaught DESC \nLIMIT 1;\n",
      "queryResult": "[(2, 'Jane Doe', 2)]",
      "friendlyResponse": "Jane Doe caught the largest number of fish in Colorado, reeling in 2 fish. Unfortunately, details such as the species, size, weight of the fish, and what fly was used, including the specific location and the date, aren't provided in the information available.",
      "error": "None"
    }
  ]
}