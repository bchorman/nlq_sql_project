{
  "strategy": "zero_shot",
  "prompt_prefix": "DROP TABLE IF EXISTS catch;\nDROP TABLE IF EXISTS fish;\nDROP TABLE IF EXISTS fly;\nDROP TABLE IF EXISTS native_fish;\nDROP TABLE IF EXISTS owned_fly;\nDROP TABLE IF EXISTS person;\nDROP TABLE IF EXISTS state;\n\nCREATE TABLE catch (\n  catch_id INTEGER PRIMARY KEY,\n  fisherman INTEGER NOT NULL,\n  species INTEGER NOT NULL,\n  fly INTEGER NOT NULL,\n  length DECIMAL(4,2),\n  weight DECIMAL(4,2),\n  catch_time DATETIME,\n  state CHAR(2),\n  released TINYINT,\n  FOREIGN KEY (fisherman) REFERENCES person (person_id) ON DELETE RESTRICT ON UPDATE RESTRICT,\n  FOREIGN KEY (species) REFERENCES fish (fish_id) ON DELETE RESTRICT ON UPDATE RESTRICT,\n  FOREIGN KEY (fly) REFERENCES fly (fly_id) ON DELETE RESTRICT ON UPDATE RESTRICT,\n  FOREIGN KEY (state) REFERENCES state (state_code) ON DELETE RESTRICT ON UPDATE RESTRICT\n);\n\nCREATE TABLE fish (\n  fish_id INTEGER PRIMARY KEY,\n  species VARCHAR(45) NOT NULL,\n  avg_length DECIMAL(4,2),\n  avg_weight DECIMAL(4,2)\n);\n\nCREATE TABLE fly (\n  fly_id INTEGER PRIMARY KEY,\n  brand VARCHAR(45),    -- null implies the fly is homemade\n  price DECIMAL(3,2),\n  homemade TINYINT DEFAULT 0\n);\n\nCREATE TABLE native_fish (\n  state CHAR(2) NOT NULL,\n  fish_id INTEGER NOT NULL,\n  PRIMARY KEY (state, fish_id),\n  FOREIGN KEY (fish_id) REFERENCES fish (fish_id) ON DELETE CASCADE ON UPDATE CASCADE,\n  FOREIGN KEY (state) REFERENCES state (state_code) ON DELETE RESTRICT ON UPDATE RESTRICT\n);\n\nCREATE TABLE owned_fly (\n  fisherman INTEGER NOT NULL,\n  fly INTEGER NOT NULL,\n  PRIMARY KEY (fisherman, fly),\n  FOREIGN KEY (fly) REFERENCES fly (fly_id) ON DELETE CASCADE ON UPDATE CASCADE,\n  FOREIGN KEY (fisherman) REFERENCES person (person_id) ON DELETE CASCADE ON UPDATE CASCADE\n);\n\nCREATE TABLE person (\n  person_id INTEGER NOT NULL PRIMARY KEY,\n  name VARCHAR(45) NOT NULL\n);\n\nCREATE TABLE state (\n  state_code CHAR(2) NOT NULL PRIMARY KEY\n);\n\n--- Using valid sqlite, answer the following questions for the tables provided above.\nQuestion: ",
  "questionResults": [
    {
      "question": "What is the most caught fish species?",
      "sql": "\nSELECT \n  f.species, \n  COUNT(c.species) AS total_catches\nFROM \n  catch AS c\nJOIN \n  fish AS f ON c.species = f.fish_id\nGROUP BY \n  c.species\nORDER BY \n  total_catches DESC\nLIMIT 1;\n",
      "queryResult": "[('bull trout', 10)]",
      "friendlyResponse": "The most caught fish species is the bull trout.",
      "error": "None"
    },
    {
      "question": "Where was the largest fish caught recorded in the database?",
      "sql": "\nSELECT state \nFROM catch \nORDER BY weight DESC \nLIMIT 1;\n",
      "queryResult": "[('NV',)]",
      "friendlyResponse": "The largest fish caught was recorded in Nevada.",
      "error": "None"
    },
    {
      "question": "Which fisherman has been most successful?",
      "sql": "\nSELECT \n    p.person_id, \n    p.name, \n    COUNT(c.catch_id) AS total_catches\nFROM \n    person p\nJOIN \n    catch c ON p.person_id = c.fisherman\nGROUP BY \n    p.person_id, p.name\nORDER BY \n    total_catches DESC\nLIMIT 1;\n",
      "queryResult": "[(1, 'John Smith', 5)]",
      "friendlyResponse": "The most successful fisherman is John Smith, with a total of 5 catches.",
      "error": "None"
    },
    {
      "question": "Are there any anglers that tend to catch fish larger than average?",
      "sql": "\nSELECT \n  p.name AS angler_name,\n  AVG(c.length) AS avg_catch_length,\n  f.species,\n  f.avg_length AS species_avg_length\nFROM \n  catch c\n  JOIN person p ON c.fisherman = p.person_id\n  JOIN fish f ON c.species = f.fish_id\nGROUP BY \n  c.fisherman, c.species\nHAVING \n  AVG(c.length) > f.avg_length\n;\n",
      "queryResult": "[('Fisher Mann', 21.2, 'rainbow trout', 16), ('Emily Brown', 21.2, 'rainbow trout', 16), ('Emily Brown', 24.1, 'brown trout', 23.5), ('Rusty Shackleford', 21.2, 'rainbow trout', 16), ('Rusty Shackleford', 18.6, 'brook trout', 17.7), ('Rusty Shackleford', 24.1, 'brown trout', 23.5), ('Jessica Martinez', 18.6, 'brook trout', 17.7), ('Jessica Martinez', 24.1, 'brown trout', 23.5), ('Jessica Martinez', 23.8, 'bull trout', 22.6), ('David Anderson', 17.9, 'rainbow trout', 16), ('David Anderson', 18.6, 'brook trout', 17.7), ('David Anderson', 23.8, 'bull trout', 22.6), ('Sarah Taylor', 17.9, 'rainbow trout', 16), ('Sarah Taylor', 23.8, 'bull trout', 22.6), ('Matthew Thomas', 17.9, 'rainbow trout', 16)]",
      "friendlyResponse": "Yes, there are anglers who tend to catch fish larger than the average size for their species. Here are some examples: Fisher Mann, Emily Brown, Rusty Shackleford, Jessica Martinez, David Anderson, Sarah Taylor, and Matthew Thomas have all caught types of trout that were larger than the typical size for those fish.",
      "error": "None"
    },
    {
      "question": "Is there a brand of flies that does better at catching fish?",
      "sql": "\nSELECT \n    f.brand,\n    COUNT(c.catch_id) AS total_catches\nFROM \n    catch AS c\nINNER JOIN \n    fly AS f ON c.fly = f.fly_id\nGROUP BY \n    f.brand\nORDER BY \n    total_catches DESC;\n",
      "queryResult": "[(None, 20), ('Umpqua', 10), ('RoundRocks', 10), ('Betts', 10)]",
      "friendlyResponse": "It looks like the brand of flies with the highest number of catches is not specified (None) with 20 catches. However, among the identified brands, Umpqua, RoundRocks, and Betts all do equally well, each with 10 catches.",
      "error": "None"
    },
    {
      "question": "What is the ratio of native to non-native fish caught?",
      "sql": "\nWITH NativeStatus AS (\n  SELECT \n    c.catch_id,\n    CASE \n      WHEN nf.state IS NOT NULL THEN 'Native'\n      ELSE 'Non-Native'\n    END AS is_native\n  FROM catch c\n  LEFT JOIN native_fish nf ON c.species = nf.fish_id AND c.state = nf.state\n),\nNativeCount AS (\n  SELECT \n    COUNT(case when is_native = 'Native' then 1 end) AS native_count,\n    COUNT(case when is_native = 'Non-Native' then 1 end) AS non_native_count\n  FROM NativeStatus\n)  \nSELECT \n  native_count,\n  non_native_count,\n  CAST(native_count AS FLOAT) / NULLIF(non_native_count, 0) AS ratio_native_to_non_native -- protect against division by zero\nFROM NativeCount;\n",
      "queryResult": "[(25, 25, 1.0)]",
      "friendlyResponse": "The ratio of native to non-native fish caught is 1:1, meaning for every native fish caught, there is also one non-native fish caught.",
      "error": "None"
    },
    {
      "question": "What time of day is best for catching fish?",
      "sql": "\nSELECT\n  strftime('%H', catch_time) AS HourOfDay,\n  COUNT(*) AS NumberOfCatches\nFROM catch\nGROUP BY strftime('%H', catch_time)\nORDER BY NumberOfCatches DESC;\n",
      "queryResult": "[('17', 5), ('16', 5), ('15', 5), ('14', 5), ('13', 5), ('12', 5), ('11', 5), ('10', 5), ('09', 5), ('08', 5)]",
      "friendlyResponse": "It looks like fishing is equally successful at any hour from 8 AM to 5 PM, with the same number of catches reported for each of those hours.",
      "error": "None"
    },
    {
      "question": "For anglers who use home tied flies, what is the ratio of fish released vs fish kept?",
      "sql": "\nSELECT\n  SUM(CASE WHEN c.released = 1 THEN 1 ELSE 0 END) AS Released,\n  SUM(CASE WHEN c.released = 0 THEN 1 ELSE 0 END) AS Kept,\n  (CAST(SUM(CASE WHEN c.released = 1 THEN 1 ELSE 0 END) AS REAL)\n    / NULLIF(SUM(CASE WHEN c.released = 0 THEN 1 ELSE 0 END),0)) AS Ratio\nFROM\n  catch c\nJOIN\n  fly f ON c.fly = f.fly_id\nWHERE\n  f.homemade = 1;\n",
      "queryResult": "[(10, 10, 1.0)]",
      "friendlyResponse": "For anglers using home-tied flies, the number of fish released is equal to the number of fish kept, with a ratio of 1:1. This means for every fish they keep, they also release one.",
      "error": "None"
    },
    {
      "question": "Who caught the largest fish, what species, length, weight, and what fly was it on? Also, where and when did this happen?",
      "sql": "\nSELECT \n  p.name AS fisherman_name, \n  f.species, \n  c.length, \n  c.weight, \n  fl.brand AS fly_brand, \n  c.state, \n  c.catch_time \nFROM catch c\nJOIN person p ON c.fisherman = p.person_id\nJOIN fish f ON c.species = f.fish_id\nJOIN fly fl ON c.fly = fl.fly_id\nJOIN state s ON c.state = s.state_code\nORDER BY c.weight DESC, c.length DESC\nLIMIT 1;\n",
      "queryResult": "[('Emily Brown', 'brown trout', 24.1, 4.9, None, 'NV', '2023-08-28 10:10:00')]",
      "friendlyResponse": "Emily Brown caught the largest fish, which was a brown trout, measuring 24.1 inches in length and weighing 4.9 pounds. Unfortunately, the fly used is not specified. This catch happened in Nevada on August 28, 2023, at 10:10 AM.",
      "error": "None"
    }
  ]
}